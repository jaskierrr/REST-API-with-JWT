// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"main/internal/models"
)

// PostUsersUserIDTaskCompleteCreatedCode is the HTTP code returned for type PostUsersUserIDTaskCompleteCreated
const PostUsersUserIDTaskCompleteCreatedCode int = 201

/*
PostUsersUserIDTaskCompleteCreated User's task was completed

swagger:response postUsersUserIdTaskCompleteCreated
*/
type PostUsersUserIDTaskCompleteCreated struct {

	/*
	  In: Body
	*/
	Payload *models.Task `json:"body,omitempty"`
}

// NewPostUsersUserIDTaskCompleteCreated creates PostUsersUserIDTaskCompleteCreated with default headers values
func NewPostUsersUserIDTaskCompleteCreated() *PostUsersUserIDTaskCompleteCreated {

	return &PostUsersUserIDTaskCompleteCreated{}
}

// WithPayload adds the payload to the post users user Id task complete created response
func (o *PostUsersUserIDTaskCompleteCreated) WithPayload(payload *models.Task) *PostUsersUserIDTaskCompleteCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post users user Id task complete created response
func (o *PostUsersUserIDTaskCompleteCreated) SetPayload(payload *models.Task) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostUsersUserIDTaskCompleteCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
PostUsersUserIDTaskCompleteDefault Общая ошибка

swagger:response postUsersUserIdTaskCompleteDefault
*/
type PostUsersUserIDTaskCompleteDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewPostUsersUserIDTaskCompleteDefault creates PostUsersUserIDTaskCompleteDefault with default headers values
func NewPostUsersUserIDTaskCompleteDefault(code int) *PostUsersUserIDTaskCompleteDefault {
	if code <= 0 {
		code = 500
	}

	return &PostUsersUserIDTaskCompleteDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post users user ID task complete default response
func (o *PostUsersUserIDTaskCompleteDefault) WithStatusCode(code int) *PostUsersUserIDTaskCompleteDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post users user ID task complete default response
func (o *PostUsersUserIDTaskCompleteDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post users user ID task complete default response
func (o *PostUsersUserIDTaskCompleteDefault) WithPayload(payload *models.ErrorResponse) *PostUsersUserIDTaskCompleteDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post users user ID task complete default response
func (o *PostUsersUserIDTaskCompleteDefault) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostUsersUserIDTaskCompleteDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
